generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model ActivityCollection {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String

  name String
  description String
  sharedWith SharedWith[]
  activities Activity[]
  tags Tag[]

  @@unique([name, ownerId])

  @@index([ownerId])
}

model SharedWith {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  activityCollectionId String
  activityCollection ActivityCollection @relation(fields: [activityCollectionId], references: [id], onDelete: Cascade)

  userId String

  @@unique([userId, activityCollectionId])

  @@index([activityCollectionId])
}

model Activity {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  activityCollectionId String
  activityCollection ActivityCollection @relation(fields: [activityCollectionId], references: [id], onDelete: Cascade)

  name String
  tags Tag[]

  @@unique([name, activityCollectionId])

  @@index([activityCollectionId])
}

model Tag {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  activityCollectionId String
  activityCollection ActivityCollection @relation(fields: [activityCollectionId], references: [id], onDelete: Cascade)

  name String
  activities Activity[]

  @@unique([name, activityCollectionId])

  @@index([activityCollectionId])
}
